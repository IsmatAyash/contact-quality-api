// <auto-generated />
using System;
using Contact.Center.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace contact_center_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220909213805_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Contact.Center.Api.Models.Channel", b =>
                {
                    b.Property<int>("ChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ChannelName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ChannelId");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("Contact.Center.Api.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ChannelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GroupInitials")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("GroupId");

                    b.HasIndex("ChannelId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Contact.Center.Api.Models.Kpi", b =>
                {
                    b.Property<int>("KpiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("KpiMaxGrade")
                        .HasColumnType("int");

                    b.Property<string>("KpiName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("KpiRadioBtn")
                        .HasColumnType("longtext");

                    b.Property<string>("KpiType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("KpiId");

                    b.HasIndex("GroupId");

                    b.ToTable("Kpis");
                });

            modelBuilder.Entity("Contact.Center.Api.Models.Group", b =>
                {
                    b.HasOne("Contact.Center.Api.Models.Channel", "Channel")
                        .WithMany("Groups")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Channel");
                });

            modelBuilder.Entity("Contact.Center.Api.Models.Kpi", b =>
                {
                    b.HasOne("Contact.Center.Api.Models.Group", "Group")
                        .WithMany("Kpis")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Contact.Center.Api.Models.Channel", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("Contact.Center.Api.Models.Group", b =>
                {
                    b.Navigation("Kpis");
                });
#pragma warning restore 612, 618
        }
    }
}
